name: Run Repository_Dispatch

on:
  repository_dispatch:
    types: [ run_test ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - run: 'echo "field: ${{ github.event.client_payload.admin_version }}"'
      - run: 'echo "client_payload: ${{ toJson(github.event.client_payload) }}"'

      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - run: npm install

      - uses: actions/checkout@v2
      - name: Run tests
        id: run_tests
        uses: "./"

      - name: Archive cypress videos results
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Archive cypress screenshots results
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - uses: Drill4J/vee-table@0.0.0
        with:
          # leave everything "as-is"
          github-access-token: ${{ secrets.VEE_TABLE_TOKEN }}
          action-type: 'add-test-result'
          ledger-repo-url: 'https://github.com/Drill4J/vee-ledger'
          ledger-repo-owner: 'Drill4J'
          ledger-repo-name: 'vee-ledger'
          test-setup-id: ${{ github.event.repository.name }}
          # leave everything "as-is"

          # steps.run_tests is your test step name (defined above)
          test-status: ${{ steps.run_tests.outputs.status }} # 1. Pass test status (any string)
          test-component-version-map: ${{ steps.run_tests.outputs.env }}
          test-description: ${{ steps.run_tests.outputs.description }}

# Generate Personal Github token with workflow scopes.
# Run action
# curl -H "Authorization: token xxx" \
#    -H 'Accept: application/vnd.github.everest-preview+json' \
#    "https://api.github.com/repos/Drill4J/e2e/dispatches" \
#    -d '{ "event_type": "run_test", "client_payload": {"admin_version": "1.0.58"}}'
